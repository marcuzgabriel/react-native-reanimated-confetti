name: Automatic semantic versioning
on:
  push:
    branches: [main, develop, alpha, beta]
  workflow_dispatch:
jobs:
  versioning:
    name: Semantic versioning
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
    runs-on: ubuntu-latest
    outputs:
      current_version: ${{ steps.current_version.outputs.CURRENT_VERSION }}
      next_version: ${{ steps.next_version.outputs.NEXT_VERSION }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}

      - name: Setting up node
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          registry-url: 'https://npm.pkg.github.com'

      - name: Install Yarn 3.6.4
        run: |
          npm install -g yarn
          yarn set version 3.6.4

      # Get the yarn cache path.
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Restore yarn cache
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: yarn-cache-folder-${{ hashFiles('**/yarn.lock', '.yarnrc.yml') }}
          restore-keys: |
            yarn-cache-folder-

      - name: Install dependencies
        run: yarn

      - name: Install plugins
        run: yarn add -D @semantic-release/changelog @semantic-release/git @semantic-release/exec @semantic-release/commit-analyzer @semantic-release/release-notes-generator @semantic-release/npm @semantic-release/github

      - name: Print current version
        id: current_version
        run: echo "CURRENT_VERSION=$(jq -r ".version" ./package.json)" >> $GITHUB_OUTPUT;

      - name: Run semantic release
        id: next_version
        run: yarn semantic-release --extends ./releaserc.json
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

  print:
    needs: versioning
    runs-on: ubuntu-latest
    steps:
      - name: Print version numbers
        run: |
          echo "Current version is: ${{ needs.versioning.outputs.CURRENT_VERSION }}"
          echo "Next version is: ${{ needs.versioning.outputs.NEXT_VERSION }}"
